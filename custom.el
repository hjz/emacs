(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector ["#1f1f1f" "#dca3a3" "#7f9f7f" "#f0dfaf" "#7cb8bb" "#7f3194" "#93e0e3" "#dcdccc"])
 '(browse-kill-ring-highlight-current-entry t)
 '(browse-kill-ring-highlight-inserted-item t)
 '(browse-kill-ring-quit-action (quote save-and-restore))
 '(browse-kill-ring-separator "-------------------")
 '(column-number-mode t)
 '(comint-input-ignoredups t)
 '(comint-process-echoes t)
 '(comment-auto-fill-only-comments t)
 '(comment-multi-line t)
 '(confluence-default-space-alist (quote (("http://confluence.local.twitter.com/rpc/xmlrpc" . "APPSERVICES"))))
 '(confluence-save-credentials t)
 '(confluence-save-page-minor-edits t)
 '(confluence-search-max-results 64)
 '(confluence-url "http://confluence.local.twitter.com/rpc/xmlrpc")
 '(ecb-analyse-face (quote font-lock-warning-face))
 '(ecb-analyse-general-face (quote ecb-analyse-general-face))
 '(ecb-auto-activate nil)
 '(ecb-directories-general-face (quote ecb-default-general-face))
 '(ecb-directory-face (quote font-lock-warning-face))
 '(ecb-eshell-auto-activate nil)
 '(ecb-history-bucket-node-dir-soure-path-face (quote ecb-history-bucket-node-face))
 '(ecb-history-face (quote font-lock-warning-face))
 '(ecb-history-general-face (quote ecb-default-general-face))
 '(ecb-layout-name "rightc5")
 '(ecb-method-face (quote font-lock-warning-face))
 '(ecb-methods-general-face (quote ecb-default-general-face))
 '(ecb-options-version "2.40")
 '(ecb-primary-secondary-mouse-buttons (quote mouse-1--mouse-2))
 '(ecb-source-face (quote font-lock-warning-face))
 '(ecb-source-path (quote (("/" "/") (#("/Users/jz/ps/swiftlet/config" 0 28 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "sconfig") (#("/Users/jz/ps/macaw" 0 18 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "macaw") (#("/Users/jz/ps/macaw/macaw-core/src/main/scala/com/twitter/macaw/twitter" 0 70 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "mcore") (#("/Users/jz/workspace/twitter/lib" 0 31 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "twlib") (#("/Users/jz/ps/macaw/macaw-twitter/src/main/scala/com/twitter/macaw/twitter" 0 73 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "macaw-twtr") (#("/Users/jz/ps/macaw/macaw-twitter/src/test/scala/com/twitter/macaw/twitter" 0 73 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "t-macaw-twtr"))))
 '(ecb-sources-general-face (quote ecb-default-general-face))
 '(ecb-tag-header-face (quote font-lock-warning-face))
 '(ecb-use-speedbar-instead-native-tree-buffer nil)
 '(ecb-vc-enable-support t)
 '(ecb-windows-height 0.2)
 '(ecb-windows-width 0.17)
 '(ediff-merge-split-window-function (quote split-window-horizontally))
 '(ediff-show-clashes-only t)
 '(ediff-split-window-function (quote split-window-horizontally))
 '(elscreen-buffer-list-enabled t)
 '(elscreen-tab-display-control nil)
 '(ensime-auto-connect (quote never))
 '(ensime-graphical-tooltips t)
 '(ensime-tooltip-type-hints t)
 '(erc-hide-prompt nil)
 '(erc-input-line-position -1)
 '(erc-modules (quote (autoaway autojoin button completion fill irccontrols keep-place log match move-to-prompt netsplit networks page replace ring services smiley stamp spelling track)))
 '(erc-show-my-nick nil)
 '(fill-column 100)
 '(fringe-mode (quote (0 . 0)) nil (fringe))
 '(global-hl-line-mode nil)
 '(grep-files-aliases (quote (("all" . "* .*") ("el" . "*.el") ("ch" . "*.[ch]") ("c" . "*.c") ("cc" . "*.cc *.cxx *.cpp *.C *.CC *.c++") ("cchh" . "*.cc *.[ch]xx *.[ch]pp *.[CHh] *.CC *.HH *.[ch]++") ("hh" . "*.hxx *.hpp *.[Hh] *.HH *.h++") ("h" . "*.h") ("l" . "[Cc]hange[Ll]og*") ("m" . "[Mm]akefile*") ("tex" . "*.tex") ("texi" . "*.texi") ("asm" . "*.[sS]") ("s" . "*.scala"))))
 '(grep-highlight-matches (quote auto))
 '(highlight-80+-columns 100)
 '(history-delete-duplicates nil)
 '(history-length 500)
 '(ido-default-buffer-method (quote maybe-frame))
 '(ido-enable-flex-matching t)
 '(ido-enable-regexp t)
 '(ido-everywhere t)
 '(ido-ignore-files (quote ("\\`CVS/" "\\`#" "\\`.#" "\\`\\.\\./" "\\`\\./" "*.ido.last")))
 '(indicate-empty-lines t)
 '(iswitchb-regexp t)
 '(iswitchb-use-virtual-buffers t nil (recentf))
 '(kill-do-not-save-duplicates t)
 '(magit-commit-all-when-nothing-staged t)
 '(magit-completing-read-function (quote magit-iswitchb-completing-read))
 '(magit-process-popup-time 30)
 '(magit-repo-dirs (quote ("~/ps/" "~/workspace/")))
 '(moccur-edit-highlight-edited-text t)
 '(moccur-query-when-buffer-read-only t)
 '(one-key-auto-load-menus t)
 '(one-key-menus-location "~/.emacs.d/jz/one-key-menus")
 '(one-key-menus-regexp "one-key-menu.*\\.el$")
 '(org-agenda-files (quote ("~/Dropbox/Org/todo.org")))
 '(org-special-ctrl-a/e t)
 '(save-interprogram-paste-before-kill t)
 '(save-place t nil (saveplace))
 '(savehist-mode t nil (savehist))
 '(scala-mode-feature:electric-on-per-default nil)
 '(show-paren-delay 0)
 '(show-paren-mode t)
 '(show-paren-style (quote parenthesis))
 '(smart-tab-using-hippie-expand t)
 '(ssl-certificate-directory "~/.w3/certs/")
 '(ssl-program-arguments (quote ("s_client" "-quiet" "-host" host "-port" service "-verify" (int-to-string ssl-certificate-verification-policy) "-CApath" ssl-certificate-directory)))
 '(standard-indent 2)
 '(tab-always-indent (quote complete))
 '(tls-program (quote ("openssl s_client -connect %h:%p -no_ssl2 -ign_eof")))
 '(tool-bar-mode nil)
 '(transient-mark-mode t)
 '(vimpulse-fold-level 5)
 '(vimpulse-operator-comment-key "-")
 '(vimpulse-relative-linum-delay 0.1)
 '(vimpulse-want-C-u-like-Vim t)
 '(vimpulse-want-quit-like-Vim nil)
 '(viper-ESC-moves-cursor-back nil)
 '(viper-auto-indent t)
 '(viper-emacs-state-mode-list (quote (Custom-mode efs-mode tar-mode browse-kill-ring-mode recentf-mode recentf-dialog-mode occur-mode mh-folder-mode gnus-group-mode gnus-summary-mode completion-list-mode compilation-mode rcirc-mode jde-javadoc-checker-report-mode view-mode vm-mode vm-summary-mode magit-key-mode pianobar-mode ensime-inf-mode ido-everywhere-mode ack-mode)))
 '(viper-ex-style-editing nil)
 '(viper-insert-state-cursor-color nil)
 '(viper-parse-sexp-ignore-comments nil)
 '(viper-shift-width 2)
 '(viper-syntax-preference (quote extended))
 '(viper-want-ctl-h-help t)
 '(yas/indent-line (quote fixed))
 '(yas/prompt-functions (quote (yas/dropdown-prompt)))
 '(yas/triggers-in-field t)
 '(yas/wrap-around-region t))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "#1f1f1f" :foreground "#dcdccc" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 134 :width normal :foundry "apple" :family "Consolas"))))
 '(ack-file ((((background dark)) (:background "#282828" :foreground "#7cb8bb"))))
 '(ack-line ((((background dark)) (:background "#282828" :foreground "#b6b6b6"))))
 '(ack-match ((default nil) (((background dark)) (:background "#385f38" :foreground "#dcdccc"))))
 '(campfire-my-message-face ((t (:background "#2b2b2b" :foreground "white"))))
 '(campfire-my-user-face ((t (:foreground "white" :box (:line-width 2 :color "blue" :style released-button)))))
 '(campfire-other-user-face ((t (:background "#2f2f2f" :foreground "#9fc59f"))))
 '(cursor ((t (:weight bold))))
 '(diredp-file-name ((((background dark)) nil)))
 '(ecb-default-general-face ((((class color) (background dark)) nil)))
 '(elscreen-tab-background-face ((((class color)) (:background "#282828"))))
 '(elscreen-tab-control-face ((((class color)) (:background "#1f1f1f" :foreground "white"))))
 '(elscreen-tab-current-screen-face ((((class color)) (:background "#1f1f1f" :foreground "white"))))
 '(elscreen-tab-other-screen-face ((((class color)) (:background "#3D3D3D" :foreground "white"))))
 '(ensime-errline ((((class color) (background dark)) nil)))
 '(ensime-errline-highlight ((t (:underline "firebrick2"))))
 '(erc-default-face ((t (:foreground "#dcdccc"))))
 '(erc-header-line ((t (:inherit elscreen-tab-other-screen-face))))
 '(fg:erc-color-face5 ((t nil)))
 '(flyspell-incorrect ((t (:underline "#cc9393" :weight bold))))
 '(font-lock-variable-name-face ((t (:foreground "#dcdccc"))))
 '(highlight-80+ ((((background dark)) (:background "#3f3f3f" :foreground "#afd8af" :weight bold))))
 '(highlight-80+-line ((t nil)) t)
 '(lazy-highlight ((((class color) (min-colors 88) (background dark)) (:background "#284f28" :foreground "#ffffe0"))))
 '(linum ((t (:background "#282828" :foreground "#b6b6b6"))))
 '(magit-item-highlight ((((class color) (background dark)) (:background "#2f2f2f"))))
 '(minimap-active-region-background ((((background dark)) (:background "#233323"))))
 '(minimap-font-face ((default (:height 30 :family "Proggyfont Tiny")) (nil nil)))
 '(one-key-keystroke ((t (:background "#2f2f2f" :foreground "#9fc59f"))))
 '(one-key-prompt ((t (:foreground "#5f7f5f"))))
 '(one-key-title ((t (:foreground "#5f7f5f"))))
 '(show-paren-mismatch ((t (:background "red" :foreground "white")))))
